# Pipeline Runtimes

First timed runthru

Step 0a:
- samtools faidx <filepath>/GRCh38.p13.genome.fa.gz
- not timed

Step 0b:
- gatk CreateSequenceDictionary -R <filepath>/GRCh38.p13.genome.fa.gz -O <filepath>/GRCh38.p13.genome.dict
- not timed

Step 1: fastq alignment using minimap2
- minimap2 -t8 -a <filepath>/GRCh38.p13.genome.fa.gz <filepath>/<filename>1.fastq.gz <filepath>/<filename>2.fastq.gz -R @RG\tID:foo\tSM:bar
- Elapsed (wall clock) time (h:mm:ss or m:ss): 3:52:59

Step 2: build bam index
- gatk BuildBamIndex -I <filepath>/<filename>.bam
- Elapsed (wall clock) time (h:mm:ss or m:ss): 1:15:19

Step 3: use haplotype caller to build intermediate gvcf
- gatk --java-options -Xmx12g HaplotypeCaller --native-pair-hmm-threads 8 -R <filepath>/GRCh38.p13.genome.fa.gz -I <filepath>/<filename>.bam -D <filepath>/dbsnp_146.hg38.vcf.gz -O <filepath>/<filename>.g.vcf.gz -ERC GVCF --output-mode EMIT_ALL_ACTIVE_SITES"
- Elapsed (wall clock) time (h:mm:ss or m:ss): 46:56:34

Step 4: use genotype to build final gvcf
- /gatk --java-options "-Xmx16g" GenotypeGVCFs -R <filepath>/GRCh38.p13.genome.fa.gz -D <filepath>/dbsnp_146.hg38.vcf.gz -V <filepath>/<filename>.g.vcf.gz -O <filepath>/<filename>.genotype.vcf.gz -all-sites
- Elapsed (wall clock) time (h:mm:ss or m:ss): 34:14:29

Notes on this run:
- minimap2: I noticed a substantial drop in read coverage from other bam alignments produced by the same source fastq files, so despite the faster processing time, I changed aligners after this run.
- dbSNP build 146: while waiting for this run, I found build 155 existed, but it needed some pre-processing to add to the pipeline, subsequent runs use the newer build


Second timed runthru

Step 0a: index the reference genome using bwa-mem2
- <filepath>/bwa-mem2 index <filepath>/GRCh38.p13.genome.fa.gz
- Elapsed (wall clock) time (h:mm:ss or m:ss): 1:07:01

Step 0b: dnSNP convert CHROM names
- bcftools annotate --rename-chrs <filepath>/GCF_000001405.39_GRCh38.p13_assembly_report.chrnames_hybrid --threads 10 -Oz -o <filepath>/GRCh38.dbSNP155.hybrid.vcf.gz GCF_000001405.39.gz
- Elapsed (wall clock) time (h:mm:ss or m:ss): 37:15.87

Step 0c: dnSNP sort using revised CHROM names
- bcftools sort -O z -o <filepath>/GRCh38.dbSNP155.sorted.hybrid.vcf.gz <filepath>/GRCh38.dbSNP155.hybrid.vcf.gz
- Elapsed (wall clock) time (h:mm:ss or m:ss): 1:55:15

Step 0d: index sorted dnSNP vcf (generate tbi)
- bcftools index -t --threads 10 <filepath>/GRCh38.dbSNP155.sorted.hybrid.vcf.gz
- Elapsed (wall clock) time (h:mm:ss or m:ss): 8:13.83

Step 0e: index sorted dnSBP vcf (generate idx)
- <filepath>/igvtools index <filepath>/GRCh38.dbSNP155.sorted.hybrid.vcf.gz
- Elapsed (wall clock) time (h:mm:ss or m:ss): 1:12:54

Step 1: fastq alignment using bwa-mem2
- <filepath>/bwa-mem2 mem -t 10 <filepath>/GRCh38.p13.genome.fa.gz <filepath>/<filename>1.fq.gz <filepath>/<filename>2.fq.gz -R @RG\\tID:foo\\tSM:bar | samtools sort -@10 -o <filepath>/<filename>.bam
- Elapsed (wall clock) time (h:mm:ss or m:ss): 11:13:30
- filesize <filename>1.fq.gz    57,943,940,126 bytes
- filesize <filename>2.fq.gz    64,373,417,241 bytes
- filesize <filename>.bam      114,855,026,696 bytes

Step 2: check alignment results with WGSExtract
- use WGSExtract view stats and header of new bam file
<filepath>/WGSExtractv3/Start_UbuntuLinux.sh
# choose output directory   <filepath>
# choose bam file           <filename>.bam
# select index (wait 30 to 45 minutes)
# select stats (almost immediate)
## compare to previously observed values for BAM files from these fastq
## coverage drop issue appears resolved (proceed to next step)
# select close window
# select exit WGSExtract

Step 3: use haplotype caller to build intermediate gvcf
- <filepath>/gatk --java-options "-Xmx16g" HaplotypeCaller --native-pair-hmm-threads 10 -R <filepath>/GRCh38.p13.genome.fa.gz -I <filepath>/<filename>.bam -D <filepath>/GRCh38.dbSNP155.sorted.hybrid.vcf.gz -O <filepath>/<filename>.g.vcf.gz -ERC GVCF --output-mode EMIT_ALL_ACTIVE_SITES
- Elapsed (wall clock) time (h:mm:ss or m:ss): 108:10:22
- filesize <filename>.g.vcf.gz           4,544,548,082 bytes

Step 4: use genotype to build final gvcf
- <filepath>/gatk --java-options "-Xmx16g" GenotypeGVCFs -R <filepath>/GRCh38.p13.genome.fa.gz -D <filepath>/GRCh38.dbSNP155.sorted.hybrid.vcf.gz -V <filepath>/<filename>.g.vcf.gz -O <filepath>/<filename>.genotype.vcf.gz -all-sites
- Elapsed (wall clock) time (h:mm:ss or m:ss): 58:29:22
- filesize <filename>.genotype.vcf.gz   18,266,365,390 bytes

Notes on this run:
- GRCh38.p13.genome.fa.gz uses a different convention than the NIH dbSNP build, considering replacing with the NIH reference file in next pipeline iteration (after the instance in progress completes)
- two steps ("bcftools annotate --rename" and "bcftools sort") should not be necessary in next iteration
- "final" gvcf file is too large (17 GB) for some 3rd party analyses
- the next step in the pipeline should be ClinVar annotation, will look at adding this in the next iteration (presumably starting with the limited ClinVar data from NIH in vcf format)

Third timed runthru (in progress)
- differences from most rior run
-- different fastq sample pairs
-- updated version of bwa-mem
--- bwa-mem2-2.2.1 offers more CPU optimization than bwa-mem2-2.0pre2 and may be faster
-- use samtools to index the aligned bam (instead of WGSExtract or gatk)
- reference files and their derivatives are the same as the prior runthru except for these exceptions
-- re-index reference fasta using newer bwa-mem2

Step 0: #index the reference genome (GRCh38.p13.genome.fa.gz) with newer version of bwa-mem2
- <filepath>/bwa-mem2 index <filepath>/GRCh38.p13.genome.fa.gz
- Elapsed (wall clock) time (h:mm:ss or m:ss): 52:02.38

Step 1: fastq alignment using bwa-mem2
- <filepath>/bwa-mem2 mem -t 10 <filepath>/GRCh38.p13.genome.fa.gz <filepath>/<filename>1.fq.gz <filepath>/<filename>2.fq.gz -R @RG\\tID:foo\\tSM:bar | samtools sort -@10 -o <filepath>/<filename>.bam
- Elapsed (wall clock) time (h:mm:ss or m:ss): 8:15:38
- filesize <filename>1.fq.gz    31,668,145,586 bytes
- filesize <filename>2.fq.gz    28,277,876,263 bytes
- filesize <filename>.bam       45,009,420,921 bytes

Step 2: index the bam newly created
- samtools index -b -@8 <filepath>/<filename>.bam
- Elapsed (wall clock) time (h:mm:ss or m:ss): 3:00.42
- filesize <filename>.bam.bai        9,440,376 bytes

Step 3: use haplotype caller to build intermediate gvcf
- <filepath>/gatk --java-options "-Xmx16g" HaplotypeCaller --native-pair-hmm-threads 10 -R <filepath>/GRCh38.p13.genome.fa.gz -I <filepath>/<filename>.bam -D <filepath>/GRCh38.dbSNP155.sorted.hybrid.vcf.gz -O <filepath>/<filename>.g.vcf.gz -ERC GVCF --output-mode EMIT_ALL_ACTIVE_SITES
- Elapsed (wall clock) time (h:mm:ss or m:ss): 126:36:16 
- filesize <filename>.g.vcf.gz    9,638,645,997 bytes

Step 4: use genotype to build final gvcf
# pending completion
- <filepath>/gatk --java-options "-Xmx16g" GenotypeGVCFs -R <filepath>/GRCh38.p13.genome.fa.gz -D <filepath>/GRCh38.dbSNP155.sorted.hybrid.vcf.gz -V <filepath>/<filename>.g.vcf.gz -O <filepath>/<filename>.genotype.vcf.gz -all-sites
- Elapsed (wall clock) time (h:mm:ss or m:ss): TBD
- filesize <filename>.genotype.vcf.gz   TBD bytes

Notes on this run:
- WIP, may add notes later
